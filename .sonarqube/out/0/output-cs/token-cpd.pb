ö
nE:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\AvaliacaoFisica.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
{ 
public 

class 
AvaliacaoFisica  
:! "
IAvaliacaoFisica# 3
{ 
public 
decimal 
CalcularIMC "
(" #
decimal# *
alturaCM+ 3
,3 4
decimal5 <
pesoKG= C
)C D
{ 	
var		 
teste		 
=		 
$num		 
;		 
return

 
$num

 
;

 
} 	
	protected 
void 
MetodoNaoChamado '
(' (
)( )
{) *
} 	
} 
} Â1
|E:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\ConexaoDBs\ConexaoDBSqlServer.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
.  

ConexaoDBs  *
{		 
public

 

class

 
ConexaoDBSqlServer

 #
:

$ %

IConexaoDB

& 0
{ 
public 
Task 
< 
dynamic 
>  
ConsultaUsuarioPorId 1
(1 2
string2 8
nome9 =
)= >
{ 	
return 
null 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
dynamic& -
>- .
>. /"
ConsultaUsuarioPorNome0 F
(F G
stringG M
nomeN R
)R S
{ 	
var 
query 
= 
$str A
+B C
nomeD H
+I J
$strK O
;O P
using 
( 
var 
sqlCon 
= 
new  #
SqlConnection$ 1
(1 2
$str2 ~
)~ 
)	 €
using 
( 
var 
sqlCmd 
= 
new  #

SqlCommand$ .
(. /
query/ 4
,4 5
sqlCon6 <
)< =
)= >
{ 
sqlCon 
. 
Open 
( 
) 
; 
var 
	sqlReader 
= 
await  %
sqlCmd& ,
., -
ExecuteReaderAsync- ?
(? @
)@ A
;A B
sqlCon 
. 
Close 
( 
) 
; 
var 
dt 
= 
new 
	DataTable &
(& '
)' (
;( )
dt 
. 
Load 
( 
	sqlReader !
)! "
;" #
var   
result   
=   
new    
List  ! %
<  % &
dynamic  & -
>  - .
(  . /
)  / 0
;  0 1
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!!  !
<!!" #
dt!!$ &
.!!& '
Rows!!' +
.!!+ ,
Count!!, 1
;!!1 2
i!!3 4
++!!4 6
)!!6 7
{"" 
result## 
.## 
Add## 
(## 
new## "
{### $
nome##% )
=##* +
dt##, .
.##. /
Rows##/ 3
[##3 4
i##4 5
]##5 6
[##6 7
$str##7 =
]##= >
}##? @
)##@ A
;##A B
}$$ 
return%% 
result%% 
;%% 
}&& 
}'' 	
public)) 
bool)) 
ValidaLogin)) 
())  
string))  &
username))' /
,))/ 0
string))1 7
password))8 @
)))@ A
{** 	
var++ 
query++ 
=++ 
$str++ A
+++B C
username++D L
+++M N
$str++O c
+++d e
password++f n
+++o p
$str++q t
;++t u
using-- 
(-- 
var-- 
sqlCon-- 
=-- 
new--  #
SqlConnection--$ 1
(--1 2
$str--2 ~
)--~ 
)	-- €
using.. 
(.. 
var.. 
sqlCmd.. 
=.. 
new..  #

SqlCommand..$ .
(... /
query../ 4
,..4 5
sqlCon..6 <
)..< =
)..= >
{// 
sqlCon00 
.00 
Open00 
(00 
)00 
;00 
while11 
(11 
$num11 
==11 
$num11 
)11 
{22 
var33 
	sqlReader33 !
=33" #
sqlCmd33$ *
.33* +
ExecuteReader33+ 8
(338 9
)339 :
;33: ;
sqlCon44 
.44 
Close44  
(44  !
)44! "
;44" #
var66 
dt66 
=66 
new66  
	DataTable66! *
(66* +
)66+ ,
;66, -
dt77 
.77 
Load77 
(77 
	sqlReader77 %
)77% &
;77& '
List88 
<88 
DataRow88  
>88  !
rows88" &
=88' (
dt88) +
.88+ ,
AsEnumerable88, 8
(888 9
)889 :
.88: ;
ToList88; A
(88A B
)88B C
;88C D
var99 
x99 
=99 
rows99  
.:: 
OrderBy::  
(::  !
person::! '
=>::( *
person::+ 1
[::1 2
$str::2 6
]::6 7
)::7 8
.;; 
OrderBy;;  
(;;  !
person;;! '
=>;;( *
person;;+ 1
[;;1 2
$str;;2 6
];;6 7
);;7 8
.<< 
OrderBy<<  
(<<  !
person<<! '
=><<( *
person<<+ 1
[<<1 2
$str<<2 6
]<<6 7
)<<7 8
.== 
OrderBy==  
(==  !
person==! '
=>==( *
person==+ 1
[==1 2
$str==2 6
]==6 7
)==7 8
.>> 
OrderBy>>  
(>>  !
person>>! '
=>>>( *
person>>+ 1
[>>1 2
$str>>2 6
]>>6 7
)>>7 8
.>>8 9
ToList>>9 ?
(>>? @
)>>@ A
;>>A B
if@@ 
(@@ 
x@@ 
.@@ 
Count@@ 
>@@  !
$num@@" #
)@@# $
{AA 
returnBB 
trueBB #
;BB# $
}CC 
}DD 
returnEE 
trueEE 
;EE 
}FF 
returnHH 
falseHH 
;HH 
}II 	
}KK 
}LL Ê	
ƒE:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\Factories\GerarCodigoCadastroPadrao1.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
.  
	Factories  )
{ 
public 

class &
GerarCodigoCadastroPadrao1 +
:, -)
GerarCodigoCadastroPadraoBase. K
,K L 
IGerarCodigoCadastroM a
{ 
public 
string 

TipoCodigo  
=>! #
$str$ -
;- .
public 
string 
Gerar 
( 
) 
{ 	
var 
codigoRandon 
= 
new "
Random# )
() *
)* +
.+ ,
Next, 0
(0 1
$num1 7
,7 8
$num9 ?
)? @
;@ A
return 
base 
. 

GeraCodigo "
(" #
codigoRandon# /
,/ 0
$str1 6
,6 7
$str8 :
): ;
;; <
} 	
} 
} ß
ƒE:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\Factories\GerarCodigoCadastroPadrao2.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
.  
	Factories  )
{ 
public 

class &
GerarCodigoCadastroPadrao2 +
:, -)
GerarCodigoCadastroPadraoBase. K
,K L 
IGerarCodigoCadastroM a
{ 
public 
string 

TipoCodigo  
=>! #
$str$ -
;- .
public 
string 
Gerar 
( 
) 
{ 	
var 
codigoRandon 
= 
new "
Random# )
() *
)* +
.+ ,
Next, 0
(0 1
$num1 7
,7 8
$num9 ?
)? @
;@ A
var 

prefixoArr 
= 
new  
string! '
[' (
]( )
{* +
$str, /
,/ 0
$str1 4
,4 5
$str6 9
}: ;
;; <
string 
prefixo 
= 
$str 
;  
for 
( 
int 
i 
= 
$num 
; 
i 
< 

prefixoArr  *
.* +
Length+ 1
;1 2
++3 5
i5 6
)6 7
{ 
prefixo 
= 
prefixo !
+" #
prefixo$ +
[+ ,
i, -
]- .
;. /
} 
return 
base 
. 

GeraCodigo "
(" #
codigoRandon# /
,/ 0
prefixo1 8
,8 9
$str: ?
)? @
;@ A
} 	
} 
} Ç
†E:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\Factories\GerarCodigoCadastroPadraoBase.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
.  
	Factories  )
{ 
public 

abstract 
class )
GerarCodigoCadastroPadraoBase 7
{ 
public )
GerarCodigoCadastroPadraoBase ,
(, -
)- .
{ 	
} 	
public		 
string		 

GeraCodigo		  
(		  !
int		! $
codigo		% +
,		+ ,
string		- 3
prefixo		4 ;
,		; <
string		= C
sufixo		D J
)		J K
{		K L
return

 
$"

 
{

 
prefixo

 
}

 
$str

 
{

  
codigo

  &
}

& '
$str

' (
{

( )
sufixo

) /
}

/ 0
"

0 1
;

1 2
} 	
} 
} Ò
zE:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\Interfaces\IAvaliacaoFisica.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
.  

Interfaces  *
{ 
public 

	interface 
IAvaliacaoFisica %
{ 
decimal	 
CalcularIMC 
( 
decimal $
alturaCm% -
,- .
decimal/ 6
pesoKg7 =
)= >
;> ?
} 
} ð
tE:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\Interfaces\IConexaoDB.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
.  

Interfaces  *
{ 
public 

	interface 

IConexaoDB 
{ 
bool	 
ValidaLogin 
( 
string  
username! )
,) *
string+ 1
password2 :
): ;
;; <
Task			 
<		 
IEnumerable		 
<		 
dynamic		 !
>		! "
>		" #"
ConsultaUsuarioPorNome		$ :
(		: ;
string		; A
nome		B F
)		F G
;		G H
Task

	 
<

 
dynamic

 
>

  
ConsultaUsuarioPorId

 +
(

+ ,
string

, 2
nome

3 7
)

7 8
;

8 9
} 
} î
~E:\_Storage\Giancarlo\_UniBrasil\_workspaceUnibrasil\NetcoreV3.SonarQ\NetcoreV3.SonarQ.Apps\Interfaces\IGerarCodigoCadastro.cs
	namespace 	
	NetcoreV3
 
. 
SonarQ 
. 
Apps 
.  

Interfaces  *
{ 
public 

	interface  
IGerarCodigoCadastro )
{ 
public 
string 

TipoCodigo  
{! "
get# &
;& '
}( )
string 
Gerar 
( 
) 
; 
} 
} 